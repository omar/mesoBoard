//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Attachments_Posts", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Post), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Attachment), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Forums_Categories", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Category), "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Forum), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_ForumPermissions_Forums", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Forum), "ForumPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ForumPermission), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Permissions_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Role), "ForumPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ForumPermission), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_InRoles_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Role), "InRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.InRole), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_PollOptions_Polls", "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Poll), "PollOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.PollOption), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_PollVotes_PollOptions", "PollOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.PollOption), "PollVote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.PollVote), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_ReportedPosts_Posts", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Post), "ReportedPost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.ReportedPost), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Roles_Ranks", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.Rank), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Role), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_InRoles_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "InRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.InRole), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Messages_FromUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Message), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Messages_ToUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Message), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_OnlineUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "OnlineUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.OnlineUser), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_PasswordResetRequests_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "PasswordResetRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.PasswordResetRequest), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_PollVotes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "PollVote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.PollVote), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Posts_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Post), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_ThreadViews_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "ThreadView", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ThreadView), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Views_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "ThreadViewStamp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ThreadViewStamp), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_UserProfiles_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.Role), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.UserProfile), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_UserProfiles_Themes", "Theme", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.Theme), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.UserProfile), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_UserProfiles_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.UserProfile), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Threads_Forums", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Forum), "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Thread), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Polls_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Thread), "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mesoBoard.Data.Poll), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Posts_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Thread), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Post), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_ThreadViews_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Thread), "ThreadView", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ThreadView), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_ThreadViewStamp_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Thread), "ThreadViewStamp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.ThreadViewStamp), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Subscriptions_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.Thread), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Subscription), true)]
[assembly: EdmRelationshipAttribute("mesoBoard.Data", "FK_Subscriptions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mesoBoard.Data.User), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mesoBoard.Data.Subscription), true)]

#endregion

namespace mesoBoard.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class mbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new mbEntities object using the connection string found in the 'mbEntities' section of the application configuration file.
        /// </summary>
        public mbEntities() : base("name=mbEntities", "mbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mbEntities object.
        /// </summary>
        public mbEntities(string connectionString) : base(connectionString, "mbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mbEntities object.
        /// </summary>
        public mbEntities(EntityConnection connection) : base(connection, "mbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachment>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachment> _Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BBCode> BBCodes
        {
            get
            {
                if ((_BBCodes == null))
                {
                    _BBCodes = base.CreateObjectSet<BBCode>("BBCodes");
                }
                return _BBCodes;
            }
        }
        private ObjectSet<BBCode> _BBCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Config> Configs
        {
            get
            {
                if ((_Configs == null))
                {
                    _Configs = base.CreateObjectSet<Config>("Configs");
                }
                return _Configs;
            }
        }
        private ObjectSet<Config> _Configs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileType> FileTypes
        {
            get
            {
                if ((_FileTypes == null))
                {
                    _FileTypes = base.CreateObjectSet<FileType>("FileTypes");
                }
                return _FileTypes;
            }
        }
        private ObjectSet<FileType> _FileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumPermission> ForumPermissions
        {
            get
            {
                if ((_ForumPermissions == null))
                {
                    _ForumPermissions = base.CreateObjectSet<ForumPermission>("ForumPermissions");
                }
                return _ForumPermissions;
            }
        }
        private ObjectSet<ForumPermission> _ForumPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Forum> Forums
        {
            get
            {
                if ((_Forums == null))
                {
                    _Forums = base.CreateObjectSet<Forum>("Forums");
                }
                return _Forums;
            }
        }
        private ObjectSet<Forum> _Forums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InRole> InRoles
        {
            get
            {
                if ((_InRoles == null))
                {
                    _InRoles = base.CreateObjectSet<InRole>("InRoles");
                }
                return _InRoles;
            }
        }
        private ObjectSet<InRole> _InRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OnlineGuest> OnlineGuests
        {
            get
            {
                if ((_OnlineGuests == null))
                {
                    _OnlineGuests = base.CreateObjectSet<OnlineGuest>("OnlineGuests");
                }
                return _OnlineGuests;
            }
        }
        private ObjectSet<OnlineGuest> _OnlineGuests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OnlineUser> OnlineUsers
        {
            get
            {
                if ((_OnlineUsers == null))
                {
                    _OnlineUsers = base.CreateObjectSet<OnlineUser>("OnlineUsers");
                }
                return _OnlineUsers;
            }
        }
        private ObjectSet<OnlineUser> _OnlineUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PasswordResetRequest> PasswordResetRequests
        {
            get
            {
                if ((_PasswordResetRequests == null))
                {
                    _PasswordResetRequests = base.CreateObjectSet<PasswordResetRequest>("PasswordResetRequests");
                }
                return _PasswordResetRequests;
            }
        }
        private ObjectSet<PasswordResetRequest> _PasswordResetRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PluginConfig> PluginConfigs
        {
            get
            {
                if ((_PluginConfigs == null))
                {
                    _PluginConfigs = base.CreateObjectSet<PluginConfig>("PluginConfigs");
                }
                return _PluginConfigs;
            }
        }
        private ObjectSet<PluginConfig> _PluginConfigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plugin> Plugins
        {
            get
            {
                if ((_Plugins == null))
                {
                    _Plugins = base.CreateObjectSet<Plugin>("Plugins");
                }
                return _Plugins;
            }
        }
        private ObjectSet<Plugin> _Plugins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PollOption> PollOptions
        {
            get
            {
                if ((_PollOptions == null))
                {
                    _PollOptions = base.CreateObjectSet<PollOption>("PollOptions");
                }
                return _PollOptions;
            }
        }
        private ObjectSet<PollOption> _PollOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Poll> Polls
        {
            get
            {
                if ((_Polls == null))
                {
                    _Polls = base.CreateObjectSet<Poll>("Polls");
                }
                return _Polls;
            }
        }
        private ObjectSet<Poll> _Polls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PollVote> PollVotes
        {
            get
            {
                if ((_PollVotes == null))
                {
                    _PollVotes = base.CreateObjectSet<PollVote>("PollVotes");
                }
                return _PollVotes;
            }
        }
        private ObjectSet<PollVote> _PollVotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Post>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Post> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rank> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Rank>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Rank> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportedPost> ReportedPosts
        {
            get
            {
                if ((_ReportedPosts == null))
                {
                    _ReportedPosts = base.CreateObjectSet<ReportedPost>("ReportedPosts");
                }
                return _ReportedPosts;
            }
        }
        private ObjectSet<ReportedPost> _ReportedPosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Smiley> Smileys
        {
            get
            {
                if ((_Smileys == null))
                {
                    _Smileys = base.CreateObjectSet<Smiley>("Smileys");
                }
                return _Smileys;
            }
        }
        private ObjectSet<Smiley> _Smileys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Theme> Themes
        {
            get
            {
                if ((_Themes == null))
                {
                    _Themes = base.CreateObjectSet<Theme>("Themes");
                }
                return _Themes;
            }
        }
        private ObjectSet<Theme> _Themes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThreadView> ThreadViews
        {
            get
            {
                if ((_ThreadViews == null))
                {
                    _ThreadViews = base.CreateObjectSet<ThreadView>("ThreadViews");
                }
                return _ThreadViews;
            }
        }
        private ObjectSet<ThreadView> _ThreadViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThreadViewStamp> ThreadViewStamps
        {
            get
            {
                if ((_ThreadViewStamps == null))
                {
                    _ThreadViewStamps = base.CreateObjectSet<ThreadViewStamp>("ThreadViewStamps");
                }
                return _ThreadViewStamps;
            }
        }
        private ObjectSet<ThreadViewStamp> _ThreadViewStamps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Thread> Threads
        {
            get
            {
                if ((_Threads == null))
                {
                    _Threads = base.CreateObjectSet<Thread>("Threads");
                }
                return _Threads;
            }
        }
        private ObjectSet<Thread> _Threads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachment attachment)
        {
            base.AddObject("Attachments", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BBCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBBCodes(BBCode bBCode)
        {
            base.AddObject("BBCodes", bBCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigs(Config config)
        {
            base.AddObject("Configs", config);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileTypes(FileType fileType)
        {
            base.AddObject("FileTypes", fileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForumPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForumPermissions(ForumPermission forumPermission)
        {
            base.AddObject("ForumPermissions", forumPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForums(Forum forum)
        {
            base.AddObject("Forums", forum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInRoles(InRole inRole)
        {
            base.AddObject("InRoles", inRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OnlineGuests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOnlineGuests(OnlineGuest onlineGuest)
        {
            base.AddObject("OnlineGuests", onlineGuest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OnlineUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOnlineUsers(OnlineUser onlineUser)
        {
            base.AddObject("OnlineUsers", onlineUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PasswordResetRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPasswordResetRequests(PasswordResetRequest passwordResetRequest)
        {
            base.AddObject("PasswordResetRequests", passwordResetRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PluginConfigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPluginConfigs(PluginConfig pluginConfig)
        {
            base.AddObject("PluginConfigs", pluginConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plugins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlugins(Plugin plugin)
        {
            base.AddObject("Plugins", plugin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PollOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPollOptions(PollOption pollOption)
        {
            base.AddObject("PollOptions", pollOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Polls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolls(Poll poll)
        {
            base.AddObject("Polls", poll);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PollVotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPollVotes(PollVote pollVote)
        {
            base.AddObject("PollVotes", pollVote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Post post)
        {
            base.AddObject("Posts", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Rank rank)
        {
            base.AddObject("Ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportedPosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportedPosts(ReportedPost reportedPost)
        {
            base.AddObject("ReportedPosts", reportedPost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Smileys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSmileys(Smiley smiley)
        {
            base.AddObject("Smileys", smiley);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Themes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThemes(Theme theme)
        {
            base.AddObject("Themes", theme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ThreadViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThreadViews(ThreadView threadView)
        {
            base.AddObject("ThreadViews", threadView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ThreadViewStamps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThreadViewStamps(ThreadViewStamp threadViewStamp)
        {
            base.AddObject("ThreadViewStamps", threadViewStamp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Threads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThreads(Thread thread)
        {
            base.AddObject("Threads", thread);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<OnlineGuest> Get_Inactive_OnlineGuests()
        {
            return base.ExecuteFunction<OnlineGuest>("Get_Inactive_OnlineGuests");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<OnlineGuest> Get_Inactive_OnlineGuests(MergeOption mergeOption)
        {
            return base.ExecuteFunction<OnlineGuest>("Get_Inactive_OnlineGuests", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<OnlineUser> Get_Inactive_OnlineUsers()
        {
            return base.ExecuteFunction<OnlineUser>("Get_Inactive_OnlineUsers");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<OnlineUser> Get_Inactive_OnlineUsers(MergeOption mergeOption)
        {
            return base.ExecuteFunction<OnlineUser>("Get_Inactive_OnlineUsers", mergeOption);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="attachmentID">Initial value of the AttachmentID property.</param>
        /// <param name="postID">Initial value of the PostID property.</param>
        /// <param name="downloadName">Initial value of the DownloadName property.</param>
        /// <param name="savedName">Initial value of the SavedName property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="downloaded">Initial value of the Downloaded property.</param>
        public static Attachment CreateAttachment(global::System.Int32 attachmentID, global::System.Int32 postID, global::System.String downloadName, global::System.String savedName, global::System.String type, global::System.Int32 size, global::System.Int32 downloaded)
        {
            Attachment attachment = new Attachment();
            attachment.AttachmentID = attachmentID;
            attachment.PostID = postID;
            attachment.DownloadName = downloadName;
            attachment.SavedName = savedName;
            attachment.Type = type;
            attachment.Size = size;
            attachment.Downloaded = downloaded;
            return attachment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                if (_AttachmentID != value)
                {
                    OnAttachmentIDChanging(value);
                    ReportPropertyChanging("AttachmentID");
                    _AttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentID");
                    OnAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentID;
        partial void OnAttachmentIDChanging(global::System.Int32 value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostID
        {
            get
            {
                return _PostID;
            }
            set
            {
                OnPostIDChanging(value);
                ReportPropertyChanging("PostID");
                _PostID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostID");
                OnPostIDChanged();
            }
        }
        private global::System.Int32 _PostID;
        partial void OnPostIDChanging(global::System.Int32 value);
        partial void OnPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DownloadName
        {
            get
            {
                return _DownloadName;
            }
            set
            {
                OnDownloadNameChanging(value);
                ReportPropertyChanging("DownloadName");
                _DownloadName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DownloadName");
                OnDownloadNameChanged();
            }
        }
        private global::System.String _DownloadName;
        partial void OnDownloadNameChanging(global::System.String value);
        partial void OnDownloadNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SavedName
        {
            get
            {
                return _SavedName;
            }
            set
            {
                OnSavedNameChanging(value);
                ReportPropertyChanging("SavedName");
                _SavedName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SavedName");
                OnSavedNameChanged();
            }
        }
        private global::System.String _SavedName;
        partial void OnSavedNameChanging(global::System.String value);
        partial void OnSavedNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Downloaded
        {
            get
            {
                return _Downloaded;
            }
            set
            {
                OnDownloadedChanging(value);
                ReportPropertyChanging("Downloaded");
                _Downloaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Downloaded");
                OnDownloadedChanged();
            }
        }
        private global::System.Int32 _Downloaded;
        partial void OnDownloadedChanging(global::System.Int32 value);
        partial void OnDownloadedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Attachments_Posts", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_Attachments_Posts", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_Attachments_Posts", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_Attachments_Posts", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("mesoBoard.Data.FK_Attachments_Posts", "Post", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="BBCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BBCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BBCode object.
        /// </summary>
        /// <param name="bBCodeID">Initial value of the BBCodeID property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="parse">Initial value of the Parse property.</param>
        public static BBCode CreateBBCode(global::System.Int32 bBCodeID, global::System.String tag, global::System.String parse)
        {
            BBCode bBCode = new BBCode();
            bBCode.BBCodeID = bBCodeID;
            bBCode.Tag = tag;
            bBCode.Parse = parse;
            return bBCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BBCodeID
        {
            get
            {
                return _BBCodeID;
            }
            set
            {
                if (_BBCodeID != value)
                {
                    OnBBCodeIDChanging(value);
                    ReportPropertyChanging("BBCodeID");
                    _BBCodeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BBCodeID");
                    OnBBCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _BBCodeID;
        partial void OnBBCodeIDChanging(global::System.Int32 value);
        partial void OnBBCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parse
        {
            get
            {
                return _Parse;
            }
            set
            {
                OnParseChanging(value);
                ReportPropertyChanging("Parse");
                _Parse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Parse");
                OnParseChanged();
            }
        }
        private global::System.String _Parse;
        partial void OnParseChanging(global::System.String value);
        partial void OnParseChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String name, global::System.Int32 order)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Name = name;
            category.Order = order;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Forums_Categories", "Forum")]
        public EntityCollection<Forum> Forums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Forum>("mesoBoard.Data.FK_Forums_Categories", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Forum>("mesoBoard.Data.FK_Forums_Categories", "Forum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Config")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Config : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Config object.
        /// </summary>
        /// <param name="configID">Initial value of the ConfigID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Config CreateConfig(global::System.Int32 configID, global::System.String name, global::System.String value, global::System.String type)
        {
            Config config = new Config();
            config.ConfigID = configID;
            config.Name = name;
            config.Value = value;
            config.Type = type;
            return config;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigID
        {
            get
            {
                return _ConfigID;
            }
            set
            {
                if (_ConfigID != value)
                {
                    OnConfigIDChanging(value);
                    ReportPropertyChanging("ConfigID");
                    _ConfigID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigID");
                    OnConfigIDChanged();
                }
            }
        }
        private global::System.Int32 _ConfigID;
        partial void OnConfigIDChanging(global::System.Int32 value);
        partial void OnConfigIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Options
        {
            get
            {
                return _Options;
            }
            set
            {
                OnOptionsChanging(value);
                ReportPropertyChanging("Options");
                _Options = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Options");
                OnOptionsChanged();
            }
        }
        private global::System.String _Options;
        partial void OnOptionsChanging(global::System.String value);
        partial void OnOptionsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="FileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileType object.
        /// </summary>
        /// <param name="fileTypeID">Initial value of the FileTypeID property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        public static FileType CreateFileType(global::System.Int32 fileTypeID, global::System.String extension)
        {
            FileType fileType = new FileType();
            fileType.FileTypeID = fileTypeID;
            fileType.Extension = extension;
            return fileType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeID
        {
            get
            {
                return _FileTypeID;
            }
            set
            {
                if (_FileTypeID != value)
                {
                    OnFileTypeIDChanging(value);
                    ReportPropertyChanging("FileTypeID");
                    _FileTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileTypeID");
                    OnFileTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FileTypeID;
        partial void OnFileTypeIDChanging(global::System.Int32 value);
        partial void OnFileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Forum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Forum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Forum object.
        /// </summary>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        /// <param name="visibleToGuests">Initial value of the VisibleToGuests property.</param>
        /// <param name="allowGuestDownloads">Initial value of the AllowGuestDownloads property.</param>
        public static Forum CreateForum(global::System.Int32 forumID, global::System.Int32 categoryID, global::System.String name, global::System.Int32 order, global::System.Boolean visibleToGuests, global::System.Boolean allowGuestDownloads)
        {
            Forum forum = new Forum();
            forum.ForumID = forumID;
            forum.CategoryID = categoryID;
            forum.Name = name;
            forum.Order = order;
            forum.VisibleToGuests = visibleToGuests;
            forum.AllowGuestDownloads = allowGuestDownloads;
            return forum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                if (_ForumID != value)
                {
                    OnForumIDChanging(value);
                    ReportPropertyChanging("ForumID");
                    _ForumID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ForumID");
                    OnForumIDChanged();
                }
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VisibleToGuests
        {
            get
            {
                return _VisibleToGuests;
            }
            set
            {
                OnVisibleToGuestsChanging(value);
                ReportPropertyChanging("VisibleToGuests");
                _VisibleToGuests = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibleToGuests");
                OnVisibleToGuestsChanged();
            }
        }
        private global::System.Boolean _VisibleToGuests;
        partial void OnVisibleToGuestsChanging(global::System.Boolean value);
        partial void OnVisibleToGuestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowGuestDownloads
        {
            get
            {
                return _AllowGuestDownloads;
            }
            set
            {
                OnAllowGuestDownloadsChanging(value);
                ReportPropertyChanging("AllowGuestDownloads");
                _AllowGuestDownloads = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowGuestDownloads");
                OnAllowGuestDownloadsChanged();
            }
        }
        private global::System.Boolean _AllowGuestDownloads;
        partial void OnAllowGuestDownloadsChanging(global::System.Boolean value);
        partial void OnAllowGuestDownloadsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Forums_Categories", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("mesoBoard.Data.FK_Forums_Categories", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("mesoBoard.Data.FK_Forums_Categories", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("mesoBoard.Data.FK_Forums_Categories", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("mesoBoard.Data.FK_Forums_Categories", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ForumPermissions_Forums", "ForumPermission")]
        public EntityCollection<ForumPermission> ForumPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForumPermission>("mesoBoard.Data.FK_ForumPermissions_Forums", "ForumPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForumPermission>("mesoBoard.Data.FK_ForumPermissions_Forums", "ForumPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Threads_Forums", "Thread")]
        public EntityCollection<Thread> Threads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Thread>("mesoBoard.Data.FK_Threads_Forums", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Thread>("mesoBoard.Data.FK_Threads_Forums", "Thread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="ForumPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForumPermission object.
        /// </summary>
        /// <param name="forumPermissionID">Initial value of the ForumPermissionID property.</param>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="visibility">Initial value of the Visibility property.</param>
        /// <param name="posting">Initial value of the Posting property.</param>
        /// <param name="polling">Initial value of the Polling property.</param>
        /// <param name="attachments">Initial value of the Attachments property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static ForumPermission CreateForumPermission(global::System.Int32 forumPermissionID, global::System.Int32 forumID, global::System.Int32 visibility, global::System.Int32 posting, global::System.Int32 polling, global::System.Int32 attachments, global::System.Int32 roleID)
        {
            ForumPermission forumPermission = new ForumPermission();
            forumPermission.ForumPermissionID = forumPermissionID;
            forumPermission.ForumID = forumID;
            forumPermission.Visibility = visibility;
            forumPermission.Posting = posting;
            forumPermission.Polling = polling;
            forumPermission.Attachments = attachments;
            forumPermission.RoleID = roleID;
            return forumPermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumPermissionID
        {
            get
            {
                return _ForumPermissionID;
            }
            set
            {
                if (_ForumPermissionID != value)
                {
                    OnForumPermissionIDChanging(value);
                    ReportPropertyChanging("ForumPermissionID");
                    _ForumPermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ForumPermissionID");
                    OnForumPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _ForumPermissionID;
        partial void OnForumPermissionIDChanging(global::System.Int32 value);
        partial void OnForumPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                OnForumIDChanging(value);
                ReportPropertyChanging("ForumID");
                _ForumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForumID");
                OnForumIDChanged();
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Visibility
        {
            get
            {
                return _Visibility;
            }
            set
            {
                OnVisibilityChanging(value);
                ReportPropertyChanging("Visibility");
                _Visibility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visibility");
                OnVisibilityChanged();
            }
        }
        private global::System.Int32 _Visibility;
        partial void OnVisibilityChanging(global::System.Int32 value);
        partial void OnVisibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Posting
        {
            get
            {
                return _Posting;
            }
            set
            {
                OnPostingChanging(value);
                ReportPropertyChanging("Posting");
                _Posting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posting");
                OnPostingChanged();
            }
        }
        private global::System.Int32 _Posting;
        partial void OnPostingChanging(global::System.Int32 value);
        partial void OnPostingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Polling
        {
            get
            {
                return _Polling;
            }
            set
            {
                OnPollingChanging(value);
                ReportPropertyChanging("Polling");
                _Polling = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Polling");
                OnPollingChanged();
            }
        }
        private global::System.Int32 _Polling;
        partial void OnPollingChanging(global::System.Int32 value);
        partial void OnPollingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Attachments
        {
            get
            {
                return _Attachments;
            }
            set
            {
                OnAttachmentsChanging(value);
                ReportPropertyChanging("Attachments");
                _Attachments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attachments");
                OnAttachmentsChanged();
            }
        }
        private global::System.Int32 _Attachments;
        partial void OnAttachmentsChanging(global::System.Int32 value);
        partial void OnAttachmentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ForumPermissions_Forums", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_ForumPermissions_Forums", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_ForumPermissions_Forums", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_ForumPermissions_Forums", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("mesoBoard.Data.FK_ForumPermissions_Forums", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Permissions_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_Permissions_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_Permissions_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_Permissions_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("mesoBoard.Data.FK_Permissions_Roles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="InRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InRole object.
        /// </summary>
        /// <param name="inRoleID">Initial value of the InRoleID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static InRole CreateInRole(global::System.Int32 inRoleID, global::System.Int32 roleID, global::System.Int32 userID)
        {
            InRole inRole = new InRole();
            inRole.InRoleID = inRoleID;
            inRole.RoleID = roleID;
            inRole.UserID = userID;
            return inRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InRoleID
        {
            get
            {
                return _InRoleID;
            }
            set
            {
                if (_InRoleID != value)
                {
                    OnInRoleIDChanging(value);
                    ReportPropertyChanging("InRoleID");
                    _InRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InRoleID");
                    OnInRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _InRoleID;
        partial void OnInRoleIDChanging(global::System.Int32 value);
        partial void OnInRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_InRoles_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_InRoles_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_InRoles_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_InRoles_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("mesoBoard.Data.FK_InRoles_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_InRoles_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_InRoles_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_InRoles_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_InRoles_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_InRoles_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        /// <param name="dateSent">Initial value of the DateSent property.</param>
        /// <param name="toDelete">Initial value of the ToDelete property.</param>
        /// <param name="fromDelete">Initial value of the FromDelete property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.String text, global::System.Boolean isRead, global::System.DateTime dateSent, global::System.Boolean toDelete, global::System.Boolean fromDelete)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.Text = text;
            message.IsRead = isRead;
            message.DateSent = dateSent;
            message.ToDelete = toDelete;
            message.FromDelete = fromDelete;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromUserID
        {
            get
            {
                return _FromUserID;
            }
            set
            {
                OnFromUserIDChanging(value);
                ReportPropertyChanging("FromUserID");
                _FromUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserID");
                OnFromUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FromUserID;
        partial void OnFromUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnFromUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToUserID
        {
            get
            {
                return _ToUserID;
            }
            set
            {
                OnToUserIDChanging(value);
                ReportPropertyChanging("ToUserID");
                _ToUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserID");
                OnToUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToUserID;
        partial void OnToUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnToUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private global::System.Boolean _IsRead;
        partial void OnIsReadChanging(global::System.Boolean value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateSent
        {
            get
            {
                return _DateSent;
            }
            set
            {
                OnDateSentChanging(value);
                ReportPropertyChanging("DateSent");
                _DateSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSent");
                OnDateSentChanged();
            }
        }
        private global::System.DateTime _DateSent;
        partial void OnDateSentChanging(global::System.DateTime value);
        partial void OnDateSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToDelete
        {
            get
            {
                return _ToDelete;
            }
            set
            {
                OnToDeleteChanging(value);
                ReportPropertyChanging("ToDelete");
                _ToDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDelete");
                OnToDeleteChanged();
            }
        }
        private global::System.Boolean _ToDelete;
        partial void OnToDeleteChanging(global::System.Boolean value);
        partial void OnToDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FromDelete
        {
            get
            {
                return _FromDelete;
            }
            set
            {
                OnFromDeleteChanging(value);
                ReportPropertyChanging("FromDelete");
                _FromDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDelete");
                OnFromDeleteChanged();
            }
        }
        private global::System.Boolean _FromDelete;
        partial void OnFromDeleteChanging(global::System.Boolean value);
        partial void OnFromDeleteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Messages_FromUser", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_FromUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_FromUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_FromUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_Messages_FromUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Messages_ToUser", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_ToUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_ToUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Messages_ToUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_Messages_ToUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="OnlineGuest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineGuest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OnlineGuest object.
        /// </summary>
        /// <param name="onlineGuestID">Initial value of the OnlineGuestID property.</param>
        /// <param name="iP">Initial value of the IP property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static OnlineGuest CreateOnlineGuest(global::System.Int32 onlineGuestID, global::System.String iP, global::System.DateTime date)
        {
            OnlineGuest onlineGuest = new OnlineGuest();
            onlineGuest.OnlineGuestID = onlineGuestID;
            onlineGuest.IP = iP;
            onlineGuest.Date = date;
            return onlineGuest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OnlineGuestID
        {
            get
            {
                return _OnlineGuestID;
            }
            set
            {
                if (_OnlineGuestID != value)
                {
                    OnOnlineGuestIDChanging(value);
                    ReportPropertyChanging("OnlineGuestID");
                    _OnlineGuestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OnlineGuestID");
                    OnOnlineGuestIDChanged();
                }
            }
        }
        private global::System.Int32 _OnlineGuestID;
        partial void OnOnlineGuestIDChanging(global::System.Int32 value);
        partial void OnOnlineGuestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="OnlineUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OnlineUser object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static OnlineUser CreateOnlineUser(global::System.Int32 userID, global::System.DateTime date)
        {
            OnlineUser onlineUser = new OnlineUser();
            onlineUser.UserID = userID;
            onlineUser.Date = date;
            return onlineUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_OnlineUsers_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_OnlineUsers_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_OnlineUsers_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_OnlineUsers_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_OnlineUsers_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="PasswordResetRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PasswordResetRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PasswordResetRequest object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        public static PasswordResetRequest CreatePasswordResetRequest(global::System.Int32 userID, global::System.DateTime date, global::System.String token)
        {
            PasswordResetRequest passwordResetRequest = new PasswordResetRequest();
            passwordResetRequest.UserID = userID;
            passwordResetRequest.Date = date;
            passwordResetRequest.Token = token;
            return passwordResetRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PasswordResetRequests_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PasswordResetRequests_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PasswordResetRequests_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PasswordResetRequests_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_PasswordResetRequests_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Plugin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plugin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plugin object.
        /// </summary>
        /// <param name="pluginID">Initial value of the PluginID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="assemblyName">Initial value of the AssemblyName property.</param>
        /// <param name="installed">Initial value of the Installed property.</param>
        public static Plugin CreatePlugin(global::System.Int32 pluginID, global::System.String name, global::System.String description, global::System.String assemblyName, global::System.Boolean installed)
        {
            Plugin plugin = new Plugin();
            plugin.PluginID = pluginID;
            plugin.Name = name;
            plugin.Description = description;
            plugin.AssemblyName = assemblyName;
            plugin.Installed = installed;
            return plugin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PluginID
        {
            get
            {
                return _PluginID;
            }
            set
            {
                if (_PluginID != value)
                {
                    OnPluginIDChanging(value);
                    ReportPropertyChanging("PluginID");
                    _PluginID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PluginID");
                    OnPluginIDChanged();
                }
            }
        }
        private global::System.Int32 _PluginID;
        partial void OnPluginIDChanging(global::System.Int32 value);
        partial void OnPluginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Installed
        {
            get
            {
                return _Installed;
            }
            set
            {
                OnInstalledChanging(value);
                ReportPropertyChanging("Installed");
                _Installed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Installed");
                OnInstalledChanged();
            }
        }
        private global::System.Boolean _Installed;
        partial void OnInstalledChanging(global::System.Boolean value);
        partial void OnInstalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="PluginConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PluginConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PluginConfig object.
        /// </summary>
        /// <param name="pluginConfigID">Initial value of the PluginConfigID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static PluginConfig CreatePluginConfig(global::System.Int32 pluginConfigID, global::System.String name, global::System.String value, global::System.String type)
        {
            PluginConfig pluginConfig = new PluginConfig();
            pluginConfig.PluginConfigID = pluginConfigID;
            pluginConfig.Name = name;
            pluginConfig.Value = value;
            pluginConfig.Type = type;
            return pluginConfig;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PluginConfigID
        {
            get
            {
                return _PluginConfigID;
            }
            set
            {
                if (_PluginConfigID != value)
                {
                    OnPluginConfigIDChanging(value);
                    ReportPropertyChanging("PluginConfigID");
                    _PluginConfigID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PluginConfigID");
                    OnPluginConfigIDChanged();
                }
            }
        }
        private global::System.Int32 _PluginConfigID;
        partial void OnPluginConfigIDChanging(global::System.Int32 value);
        partial void OnPluginConfigIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PluginGroup
        {
            get
            {
                return _PluginGroup;
            }
            set
            {
                OnPluginGroupChanging(value);
                ReportPropertyChanging("PluginGroup");
                _PluginGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PluginGroup");
                OnPluginGroupChanged();
            }
        }
        private global::System.String _PluginGroup;
        partial void OnPluginGroupChanging(global::System.String value);
        partial void OnPluginGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Options
        {
            get
            {
                return _Options;
            }
            set
            {
                OnOptionsChanging(value);
                ReportPropertyChanging("Options");
                _Options = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Options");
                OnOptionsChanged();
            }
        }
        private global::System.String _Options;
        partial void OnOptionsChanging(global::System.String value);
        partial void OnOptionsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Poll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Poll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Poll object.
        /// </summary>
        /// <param name="pollID">Initial value of the PollID property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        public static Poll CreatePoll(global::System.Int32 pollID, global::System.String question)
        {
            Poll poll = new Poll();
            poll.PollID = pollID;
            poll.Question = question;
            return poll;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollID
        {
            get
            {
                return _PollID;
            }
            set
            {
                if (_PollID != value)
                {
                    OnPollIDChanging(value);
                    ReportPropertyChanging("PollID");
                    _PollID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PollID");
                    OnPollIDChanged();
                }
            }
        }
        private global::System.Int32 _PollID;
        partial void OnPollIDChanging(global::System.Int32 value);
        partial void OnPollIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollOptions_Polls", "PollOption")]
        public EntityCollection<PollOption> PollOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollOption>("mesoBoard.Data.FK_PollOptions_Polls", "PollOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollOption>("mesoBoard.Data.FK_PollOptions_Polls", "PollOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Polls_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Polls_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Polls_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Polls_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("mesoBoard.Data.FK_Polls_Threads", "Thread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="PollOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PollOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollOption object.
        /// </summary>
        /// <param name="pollOptionID">Initial value of the PollOptionID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="pollID">Initial value of the PollID property.</param>
        public static PollOption CreatePollOption(global::System.Int32 pollOptionID, global::System.String text, global::System.Int32 pollID)
        {
            PollOption pollOption = new PollOption();
            pollOption.PollOptionID = pollOptionID;
            pollOption.Text = text;
            pollOption.PollID = pollID;
            return pollOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollOptionID
        {
            get
            {
                return _PollOptionID;
            }
            set
            {
                if (_PollOptionID != value)
                {
                    OnPollOptionIDChanging(value);
                    ReportPropertyChanging("PollOptionID");
                    _PollOptionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PollOptionID");
                    OnPollOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _PollOptionID;
        partial void OnPollOptionIDChanging(global::System.Int32 value);
        partial void OnPollOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollID
        {
            get
            {
                return _PollID;
            }
            set
            {
                OnPollIDChanging(value);
                ReportPropertyChanging("PollID");
                _PollID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollID");
                OnPollIDChanged();
            }
        }
        private global::System.Int32 _PollID;
        partial void OnPollIDChanging(global::System.Int32 value);
        partial void OnPollIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollOptions_Polls", "Poll")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_PollOptions_Polls", "Poll").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_PollOptions_Polls", "Poll").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_PollOptions_Polls", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("mesoBoard.Data.FK_PollOptions_Polls", "Poll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollVotes_PollOptions", "PollVote")]
        public EntityCollection<PollVote> PollVotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollVote>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollVote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollVote>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollVote", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="PollVote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PollVote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollVote object.
        /// </summary>
        /// <param name="pollVoteID">Initial value of the PollVoteID property.</param>
        /// <param name="pollOptionID">Initial value of the PollOptionID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static PollVote CreatePollVote(global::System.Int32 pollVoteID, global::System.Int32 pollOptionID, global::System.Int32 userID)
        {
            PollVote pollVote = new PollVote();
            pollVote.PollVoteID = pollVoteID;
            pollVote.PollOptionID = pollOptionID;
            pollVote.UserID = userID;
            return pollVote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollVoteID
        {
            get
            {
                return _PollVoteID;
            }
            set
            {
                if (_PollVoteID != value)
                {
                    OnPollVoteIDChanging(value);
                    ReportPropertyChanging("PollVoteID");
                    _PollVoteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PollVoteID");
                    OnPollVoteIDChanged();
                }
            }
        }
        private global::System.Int32 _PollVoteID;
        partial void OnPollVoteIDChanging(global::System.Int32 value);
        partial void OnPollVoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollOptionID
        {
            get
            {
                return _PollOptionID;
            }
            set
            {
                OnPollOptionIDChanging(value);
                ReportPropertyChanging("PollOptionID");
                _PollOptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollOptionID");
                OnPollOptionIDChanged();
            }
        }
        private global::System.Int32 _PollOptionID;
        partial void OnPollOptionIDChanging(global::System.Int32 value);
        partial void OnPollOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollVotes_PollOptions", "PollOption")]
        public PollOption PollOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PollOption> PollOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PollOption>("mesoBoard.Data.FK_PollVotes_PollOptions", "PollOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollVotes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PollVotes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PollVotes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_PollVotes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_PollVotes_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="postID">Initial value of the PostID property.</param>
        /// <param name="threadID">Initial value of the ThreadID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="useSignature">Initial value of the UseSignature property.</param>
        /// <param name="parsedText">Initial value of the ParsedText property.</param>
        /// <param name="textOnly">Initial value of the TextOnly property.</param>
        public static Post CreatePost(global::System.Int32 postID, global::System.Int32 threadID, global::System.Int32 userID, global::System.String text, global::System.DateTime date, global::System.Boolean useSignature, global::System.String parsedText, global::System.String textOnly)
        {
            Post post = new Post();
            post.PostID = postID;
            post.ThreadID = threadID;
            post.UserID = userID;
            post.Text = text;
            post.Date = date;
            post.UseSignature = useSignature;
            post.ParsedText = parsedText;
            post.TextOnly = textOnly;
            return post;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostID
        {
            get
            {
                return _PostID;
            }
            set
            {
                if (_PostID != value)
                {
                    OnPostIDChanging(value);
                    ReportPropertyChanging("PostID");
                    _PostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostID");
                    OnPostIDChanged();
                }
            }
        }
        private global::System.Int32 _PostID;
        partial void OnPostIDChanging(global::System.Int32 value);
        partial void OnPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadID
        {
            get
            {
                return _ThreadID;
            }
            set
            {
                OnThreadIDChanging(value);
                ReportPropertyChanging("ThreadID");
                _ThreadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThreadID");
                OnThreadIDChanged();
            }
        }
        private global::System.Int32 _ThreadID;
        partial void OnThreadIDChanging(global::System.Int32 value);
        partial void OnThreadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseSignature
        {
            get
            {
                return _UseSignature;
            }
            set
            {
                OnUseSignatureChanging(value);
                ReportPropertyChanging("UseSignature");
                _UseSignature = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseSignature");
                OnUseSignatureChanged();
            }
        }
        private global::System.Boolean _UseSignature;
        partial void OnUseSignatureChanging(global::System.Boolean value);
        partial void OnUseSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParsedText
        {
            get
            {
                return _ParsedText;
            }
            set
            {
                OnParsedTextChanging(value);
                ReportPropertyChanging("ParsedText");
                _ParsedText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParsedText");
                OnParsedTextChanged();
            }
        }
        private global::System.String _ParsedText;
        partial void OnParsedTextChanging(global::System.String value);
        partial void OnParsedTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TextOnly
        {
            get
            {
                return _TextOnly;
            }
            set
            {
                OnTextOnlyChanging(value);
                ReportPropertyChanging("TextOnly");
                _TextOnly = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TextOnly");
                OnTextOnlyChanged();
            }
        }
        private global::System.String _TextOnly;
        partial void OnTextOnlyChanging(global::System.String value);
        partial void OnTextOnlyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Attachments_Posts", "Attachment")]
        public EntityCollection<Attachment> Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("mesoBoard.Data.FK_Attachments_Posts", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("mesoBoard.Data.FK_Attachments_Posts", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ReportedPosts_Posts", "ReportedPost")]
        public ReportedPost ReportedPost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedPost>("mesoBoard.Data.FK_ReportedPosts_Posts", "ReportedPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedPost>("mesoBoard.Data.FK_ReportedPosts_Posts", "ReportedPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportedPost> ReportedPostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedPost>("mesoBoard.Data.FK_ReportedPosts_Posts", "ReportedPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportedPost>("mesoBoard.Data.FK_ReportedPosts_Posts", "ReportedPost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Posts_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Posts_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Posts_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Posts_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_Posts_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Posts_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Posts_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Posts_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Posts_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("mesoBoard.Data.FK_Posts_Threads", "Thread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rank object.
        /// </summary>
        /// <param name="rankID">Initial value of the RankID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="postCount">Initial value of the PostCount property.</param>
        /// <param name="isRoleRank">Initial value of the IsRoleRank property.</param>
        public static Rank CreateRank(global::System.Int32 rankID, global::System.String title, global::System.Int32 postCount, global::System.Boolean isRoleRank)
        {
            Rank rank = new Rank();
            rank.RankID = rankID;
            rank.Title = title;
            rank.PostCount = postCount;
            rank.IsRoleRank = isRoleRank;
            return rank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankID
        {
            get
            {
                return _RankID;
            }
            set
            {
                if (_RankID != value)
                {
                    OnRankIDChanging(value);
                    ReportPropertyChanging("RankID");
                    _RankID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankID");
                    OnRankIDChanged();
                }
            }
        }
        private global::System.Int32 _RankID;
        partial void OnRankIDChanging(global::System.Int32 value);
        partial void OnRankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostCount
        {
            get
            {
                return _PostCount;
            }
            set
            {
                OnPostCountChanging(value);
                ReportPropertyChanging("PostCount");
                _PostCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostCount");
                OnPostCountChanged();
            }
        }
        private global::System.Int32 _PostCount;
        partial void OnPostCountChanging(global::System.Int32 value);
        partial void OnPostCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRoleRank
        {
            get
            {
                return _IsRoleRank;
            }
            set
            {
                OnIsRoleRankChanging(value);
                ReportPropertyChanging("IsRoleRank");
                _IsRoleRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRoleRank");
                OnIsRoleRankChanged();
            }
        }
        private global::System.Boolean _IsRoleRank;
        partial void OnIsRoleRankChanging(global::System.Boolean value);
        partial void OnIsRoleRankChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Roles_Ranks", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("mesoBoard.Data.FK_Roles_Ranks", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("mesoBoard.Data.FK_Roles_Ranks", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="ReportedPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportedPost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportedPost object.
        /// </summary>
        /// <param name="postID">Initial value of the PostID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static ReportedPost CreateReportedPost(global::System.Int32 postID, global::System.DateTime date)
        {
            ReportedPost reportedPost = new ReportedPost();
            reportedPost.PostID = postID;
            reportedPost.Date = date;
            return reportedPost;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostID
        {
            get
            {
                return _PostID;
            }
            set
            {
                if (_PostID != value)
                {
                    OnPostIDChanging(value);
                    ReportPropertyChanging("PostID");
                    _PostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostID");
                    OnPostIDChanged();
                }
            }
        }
        private global::System.Int32 _PostID;
        partial void OnPostIDChanging(global::System.Int32 value);
        partial void OnPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ReportedPosts_Posts", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_ReportedPosts_Posts", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_ReportedPosts_Posts", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("mesoBoard.Data.FK_ReportedPosts_Posts", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("mesoBoard.Data.FK_ReportedPosts_Posts", "Post", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isGroup">Initial value of the IsGroup property.</param>
        /// <param name="specialPermissions">Initial value of the SpecialPermissions property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String name, global::System.Boolean isGroup, global::System.Byte specialPermissions)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.Name = name;
            role.IsGroup = isGroup;
            role.SpecialPermissions = specialPermissions;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankID
        {
            get
            {
                return _RankID;
            }
            set
            {
                OnRankIDChanging(value);
                ReportPropertyChanging("RankID");
                _RankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankID");
                OnRankIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RankID;
        partial void OnRankIDChanging(Nullable<global::System.Int32> value);
        partial void OnRankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGroup
        {
            get
            {
                return _IsGroup;
            }
            set
            {
                OnIsGroupChanging(value);
                ReportPropertyChanging("IsGroup");
                _IsGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGroup");
                OnIsGroupChanged();
            }
        }
        private global::System.Boolean _IsGroup;
        partial void OnIsGroupChanging(global::System.Boolean value);
        partial void OnIsGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SpecialPermissions
        {
            get
            {
                return _SpecialPermissions;
            }
            set
            {
                OnSpecialPermissionsChanging(value);
                ReportPropertyChanging("SpecialPermissions");
                _SpecialPermissions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialPermissions");
                OnSpecialPermissionsChanged();
            }
        }
        private global::System.Byte _SpecialPermissions;
        partial void OnSpecialPermissionsChanging(global::System.Byte value);
        partial void OnSpecialPermissionsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Permissions_Roles", "ForumPermission")]
        public EntityCollection<ForumPermission> ForumPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ForumPermission>("mesoBoard.Data.FK_Permissions_Roles", "ForumPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ForumPermission>("mesoBoard.Data.FK_Permissions_Roles", "ForumPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_InRoles_Roles", "InRole")]
        public EntityCollection<InRole> InRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InRole>("mesoBoard.Data.FK_InRoles_Roles", "InRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InRole>("mesoBoard.Data.FK_InRoles_Roles", "InRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Roles_Ranks", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("mesoBoard.Data.FK_Roles_Ranks", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("mesoBoard.Data.FK_Roles_Ranks", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("mesoBoard.Data.FK_Roles_Ranks", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("mesoBoard.Data.FK_Roles_Ranks", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Roles", "UserProfile")]
        public EntityCollection<UserProfile> UserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("mesoBoard.Data.FK_UserProfiles_Roles", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("mesoBoard.Data.FK_UserProfiles_Roles", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Smiley")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Smiley : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Smiley object.
        /// </summary>
        /// <param name="smileyID">Initial value of the SmileyID property.</param>
        /// <param name="imageURL">Initial value of the ImageURL property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Smiley CreateSmiley(global::System.Int32 smileyID, global::System.String imageURL, global::System.String code)
        {
            Smiley smiley = new Smiley();
            smiley.SmileyID = smileyID;
            smiley.ImageURL = imageURL;
            smiley.Code = code;
            return smiley;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SmileyID
        {
            get
            {
                return _SmileyID;
            }
            set
            {
                if (_SmileyID != value)
                {
                    OnSmileyIDChanging(value);
                    ReportPropertyChanging("SmileyID");
                    _SmileyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SmileyID");
                    OnSmileyIDChanged();
                }
            }
        }
        private global::System.Int32 _SmileyID;
        partial void OnSmileyIDChanging(global::System.Int32 value);
        partial void OnSmileyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageURL
        {
            get
            {
                return _ImageURL;
            }
            set
            {
                OnImageURLChanging(value);
                ReportPropertyChanging("ImageURL");
                _ImageURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageURL");
                OnImageURLChanged();
            }
        }
        private global::System.String _ImageURL;
        partial void OnImageURLChanging(global::System.String value);
        partial void OnImageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="subscriptionID">Initial value of the SubscriptionID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="threadID">Initial value of the ThreadID property.</param>
        public static Subscription CreateSubscription(global::System.Int32 subscriptionID, global::System.Int32 userID, global::System.Int32 threadID)
        {
            Subscription subscription = new Subscription();
            subscription.SubscriptionID = subscriptionID;
            subscription.UserID = userID;
            subscription.ThreadID = threadID;
            return subscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionID
        {
            get
            {
                return _SubscriptionID;
            }
            set
            {
                if (_SubscriptionID != value)
                {
                    OnSubscriptionIDChanging(value);
                    ReportPropertyChanging("SubscriptionID");
                    _SubscriptionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionID");
                    OnSubscriptionIDChanged();
                }
            }
        }
        private global::System.Int32 _SubscriptionID;
        partial void OnSubscriptionIDChanging(global::System.Int32 value);
        partial void OnSubscriptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadID
        {
            get
            {
                return _ThreadID;
            }
            set
            {
                OnThreadIDChanging(value);
                ReportPropertyChanging("ThreadID");
                _ThreadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThreadID");
                OnThreadIDChanged();
            }
        }
        private global::System.Int32 _ThreadID;
        partial void OnThreadIDChanging(global::System.Int32 value);
        partial void OnThreadIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Subscriptions_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Subscriptions_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Subscriptions_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_Subscriptions_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("mesoBoard.Data.FK_Subscriptions_Threads", "Thread", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Subscriptions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Subscriptions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Subscriptions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Subscriptions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_Subscriptions_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Theme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Theme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Theme object.
        /// </summary>
        /// <param name="themeID">Initial value of the ThemeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="visibleToUsers">Initial value of the VisibleToUsers property.</param>
        /// <param name="folderName">Initial value of the FolderName property.</param>
        public static Theme CreateTheme(global::System.Int32 themeID, global::System.String name, global::System.String displayName, global::System.Boolean visibleToUsers, global::System.String folderName)
        {
            Theme theme = new Theme();
            theme.ThemeID = themeID;
            theme.Name = name;
            theme.DisplayName = displayName;
            theme.VisibleToUsers = visibleToUsers;
            theme.FolderName = folderName;
            return theme;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThemeID
        {
            get
            {
                return _ThemeID;
            }
            set
            {
                if (_ThemeID != value)
                {
                    OnThemeIDChanging(value);
                    ReportPropertyChanging("ThemeID");
                    _ThemeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThemeID");
                    OnThemeIDChanged();
                }
            }
        }
        private global::System.Int32 _ThemeID;
        partial void OnThemeIDChanging(global::System.Int32 value);
        partial void OnThemeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VisibleToUsers
        {
            get
            {
                return _VisibleToUsers;
            }
            set
            {
                OnVisibleToUsersChanging(value);
                ReportPropertyChanging("VisibleToUsers");
                _VisibleToUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibleToUsers");
                OnVisibleToUsersChanged();
            }
        }
        private global::System.Boolean _VisibleToUsers;
        partial void OnVisibleToUsersChanging(global::System.Boolean value);
        partial void OnVisibleToUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FolderName
        {
            get
            {
                return _FolderName;
            }
            set
            {
                OnFolderNameChanging(value);
                ReportPropertyChanging("FolderName");
                _FolderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FolderName");
                OnFolderNameChanged();
            }
        }
        private global::System.String _FolderName;
        partial void OnFolderNameChanging(global::System.String value);
        partial void OnFolderNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Themes", "UserProfile")]
        public EntityCollection<UserProfile> UserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("mesoBoard.Data.FK_UserProfiles_Themes", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("mesoBoard.Data.FK_UserProfiles_Themes", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="Thread")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Thread : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Thread object.
        /// </summary>
        /// <param name="threadID">Initial value of the ThreadID property.</param>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="hasPoll">Initial value of the HasPoll property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        public static Thread CreateThread(global::System.Int32 threadID, global::System.Int32 forumID, global::System.String title, global::System.Int32 type, global::System.Boolean hasPoll, global::System.Boolean isLocked)
        {
            Thread thread = new Thread();
            thread.ThreadID = threadID;
            thread.ForumID = forumID;
            thread.Title = title;
            thread.Type = type;
            thread.HasPoll = hasPoll;
            thread.IsLocked = isLocked;
            return thread;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadID
        {
            get
            {
                return _ThreadID;
            }
            set
            {
                if (_ThreadID != value)
                {
                    OnThreadIDChanging(value);
                    ReportPropertyChanging("ThreadID");
                    _ThreadID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThreadID");
                    OnThreadIDChanged();
                }
            }
        }
        private global::System.Int32 _ThreadID;
        partial void OnThreadIDChanging(global::System.Int32 value);
        partial void OnThreadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                OnForumIDChanging(value);
                ReportPropertyChanging("ForumID");
                _ForumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForumID");
                OnForumIDChanged();
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasPoll
        {
            get
            {
                return _HasPoll;
            }
            set
            {
                OnHasPollChanging(value);
                ReportPropertyChanging("HasPoll");
                _HasPoll = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPoll");
                OnHasPollChanged();
            }
        }
        private global::System.Boolean _HasPoll;
        partial void OnHasPollChanging(global::System.Boolean value);
        partial void OnHasPollChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Threads_Forums", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_Threads_Forums", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_Threads_Forums", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("mesoBoard.Data.FK_Threads_Forums", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("mesoBoard.Data.FK_Threads_Forums", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Polls_Threads", "Poll")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_Polls_Threads", "Poll").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_Polls_Threads", "Poll").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("mesoBoard.Data.FK_Polls_Threads", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("mesoBoard.Data.FK_Polls_Threads", "Poll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Posts_Threads", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("mesoBoard.Data.FK_Posts_Threads", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("mesoBoard.Data.FK_Posts_Threads", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViews_Threads", "ThreadView")]
        public EntityCollection<ThreadView> ThreadViews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThreadView>("mesoBoard.Data.FK_ThreadViews_Threads", "ThreadView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThreadView>("mesoBoard.Data.FK_ThreadViews_Threads", "ThreadView", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViewStamp_Threads", "ThreadViewStamp")]
        public EntityCollection<ThreadViewStamp> ThreadViewStamps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThreadViewStamp>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "ThreadViewStamp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThreadViewStamp>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "ThreadViewStamp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Subscriptions_Threads", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("mesoBoard.Data.FK_Subscriptions_Threads", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("mesoBoard.Data.FK_Subscriptions_Threads", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="ThreadView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThreadView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThreadView object.
        /// </summary>
        /// <param name="threadViewID">Initial value of the ThreadViewID property.</param>
        /// <param name="threadID">Initial value of the ThreadID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static ThreadView CreateThreadView(global::System.Int32 threadViewID, global::System.Int32 threadID, global::System.Int32 userID)
        {
            ThreadView threadView = new ThreadView();
            threadView.ThreadViewID = threadViewID;
            threadView.ThreadID = threadID;
            threadView.UserID = userID;
            return threadView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadViewID
        {
            get
            {
                return _ThreadViewID;
            }
            set
            {
                if (_ThreadViewID != value)
                {
                    OnThreadViewIDChanging(value);
                    ReportPropertyChanging("ThreadViewID");
                    _ThreadViewID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThreadViewID");
                    OnThreadViewIDChanged();
                }
            }
        }
        private global::System.Int32 _ThreadViewID;
        partial void OnThreadViewIDChanging(global::System.Int32 value);
        partial void OnThreadViewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadID
        {
            get
            {
                return _ThreadID;
            }
            set
            {
                OnThreadIDChanging(value);
                ReportPropertyChanging("ThreadID");
                _ThreadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThreadID");
                OnThreadIDChanged();
            }
        }
        private global::System.Int32 _ThreadID;
        partial void OnThreadIDChanging(global::System.Int32 value);
        partial void OnThreadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViews_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_ThreadViews_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_ThreadViews_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_ThreadViews_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_ThreadViews_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViews_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViews_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViews_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViews_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViews_Threads", "Thread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="ThreadViewStamp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThreadViewStamp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThreadViewStamp object.
        /// </summary>
        /// <param name="viewID">Initial value of the ViewID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="threadID">Initial value of the ThreadID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static ThreadViewStamp CreateThreadViewStamp(global::System.Int32 viewID, global::System.Int32 userID, global::System.Int32 threadID, global::System.DateTime date)
        {
            ThreadViewStamp threadViewStamp = new ThreadViewStamp();
            threadViewStamp.ViewID = viewID;
            threadViewStamp.UserID = userID;
            threadViewStamp.ThreadID = threadID;
            threadViewStamp.Date = date;
            return threadViewStamp;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewID
        {
            get
            {
                return _ViewID;
            }
            set
            {
                if (_ViewID != value)
                {
                    OnViewIDChanging(value);
                    ReportPropertyChanging("ViewID");
                    _ViewID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ViewID");
                    OnViewIDChanged();
                }
            }
        }
        private global::System.Int32 _ViewID;
        partial void OnViewIDChanging(global::System.Int32 value);
        partial void OnViewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadID
        {
            get
            {
                return _ThreadID;
            }
            set
            {
                OnThreadIDChanging(value);
                ReportPropertyChanging("ThreadID");
                _ThreadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThreadID");
                OnThreadIDChanged();
            }
        }
        private global::System.Int32 _ThreadID;
        partial void OnThreadIDChanging(global::System.Int32 value);
        partial void OnThreadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Views_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Views_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Views_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_Views_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_Views_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViewStamp_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("mesoBoard.Data.FK_ThreadViewStamp_Threads", "Thread", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="registerDate">Initial value of the RegisterDate property.</param>
        /// <param name="registerIP">Initial value of the RegisterIP property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastLogoutDate">Initial value of the LastLogoutDate property.</param>
        /// <param name="usernameLower">Initial value of the UsernameLower property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String username, global::System.String email, global::System.String password, global::System.String passwordSalt, global::System.Boolean status, global::System.DateTime registerDate, global::System.String registerIP, global::System.DateTime lastLoginDate, global::System.DateTime lastLogoutDate, global::System.String usernameLower)
        {
            User user = new User();
            user.UserID = userID;
            user.Username = username;
            user.Email = email;
            user.Password = password;
            user.PasswordSalt = passwordSalt;
            user.Status = status;
            user.RegisterDate = registerDate;
            user.RegisterIP = registerIP;
            user.LastLoginDate = lastLoginDate;
            user.LastLogoutDate = lastLogoutDate;
            user.UsernameLower = usernameLower;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivationCode
        {
            get
            {
                return _ActivationCode;
            }
            set
            {
                OnActivationCodeChanging(value);
                ReportPropertyChanging("ActivationCode");
                _ActivationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivationCode");
                OnActivationCodeChanged();
            }
        }
        private global::System.String _ActivationCode;
        partial void OnActivationCodeChanging(global::System.String value);
        partial void OnActivationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisterDate
        {
            get
            {
                return _RegisterDate;
            }
            set
            {
                OnRegisterDateChanging(value);
                ReportPropertyChanging("RegisterDate");
                _RegisterDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterDate");
                OnRegisterDateChanged();
            }
        }
        private global::System.DateTime _RegisterDate;
        partial void OnRegisterDateChanging(global::System.DateTime value);
        partial void OnRegisterDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegisterIP
        {
            get
            {
                return _RegisterIP;
            }
            set
            {
                OnRegisterIPChanging(value);
                ReportPropertyChanging("RegisterIP");
                _RegisterIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegisterIP");
                OnRegisterIPChanged();
            }
        }
        private global::System.String _RegisterIP;
        partial void OnRegisterIPChanging(global::System.String value);
        partial void OnRegisterIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastLoginIP
        {
            get
            {
                return _LastLoginIP;
            }
            set
            {
                OnLastLoginIPChanging(value);
                ReportPropertyChanging("LastLoginIP");
                _LastLoginIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastLoginIP");
                OnLastLoginIPChanged();
            }
        }
        private global::System.String _LastLoginIP;
        partial void OnLastLoginIPChanging(global::System.String value);
        partial void OnLastLoginIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogoutDate
        {
            get
            {
                return _LastLogoutDate;
            }
            set
            {
                OnLastLogoutDateChanging(value);
                ReportPropertyChanging("LastLogoutDate");
                _LastLogoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogoutDate");
                OnLastLogoutDateChanged();
            }
        }
        private global::System.DateTime _LastLogoutDate;
        partial void OnLastLogoutDateChanging(global::System.DateTime value);
        partial void OnLastLogoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPostDate
        {
            get
            {
                return _LastPostDate;
            }
            set
            {
                OnLastPostDateChanging(value);
                ReportPropertyChanging("LastPostDate");
                _LastPostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPostDate");
                OnLastPostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPostDate;
        partial void OnLastPostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UsernameLower
        {
            get
            {
                return _UsernameLower;
            }
            set
            {
                OnUsernameLowerChanging(value);
                ReportPropertyChanging("UsernameLower");
                _UsernameLower = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UsernameLower");
                OnUsernameLowerChanged();
            }
        }
        private global::System.String _UsernameLower;
        partial void OnUsernameLowerChanging(global::System.String value);
        partial void OnUsernameLowerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_InRoles_Users", "InRole")]
        public EntityCollection<InRole> InRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InRole>("mesoBoard.Data.FK_InRoles_Users", "InRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InRole>("mesoBoard.Data.FK_InRoles_Users", "InRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Messages_FromUser", "Message")]
        public EntityCollection<Message> MessagesSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("mesoBoard.Data.FK_Messages_FromUser", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("mesoBoard.Data.FK_Messages_FromUser", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Messages_ToUser", "Message")]
        public EntityCollection<Message> MessagesReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("mesoBoard.Data.FK_Messages_ToUser", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("mesoBoard.Data.FK_Messages_ToUser", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_OnlineUsers_Users", "OnlineUser")]
        public OnlineUser OnlineUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineUser>("mesoBoard.Data.FK_OnlineUsers_Users", "OnlineUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineUser>("mesoBoard.Data.FK_OnlineUsers_Users", "OnlineUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnlineUser> OnlineUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineUser>("mesoBoard.Data.FK_OnlineUsers_Users", "OnlineUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnlineUser>("mesoBoard.Data.FK_OnlineUsers_Users", "OnlineUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PasswordResetRequests_Users", "PasswordResetRequest")]
        public PasswordResetRequest PasswordResetRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PasswordResetRequest>("mesoBoard.Data.FK_PasswordResetRequests_Users", "PasswordResetRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PasswordResetRequest>("mesoBoard.Data.FK_PasswordResetRequests_Users", "PasswordResetRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PasswordResetRequest> PasswordResetRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PasswordResetRequest>("mesoBoard.Data.FK_PasswordResetRequests_Users", "PasswordResetRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PasswordResetRequest>("mesoBoard.Data.FK_PasswordResetRequests_Users", "PasswordResetRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_PollVotes_Users", "PollVote")]
        public EntityCollection<PollVote> PollVotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollVote>("mesoBoard.Data.FK_PollVotes_Users", "PollVote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollVote>("mesoBoard.Data.FK_PollVotes_Users", "PollVote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Posts_Users", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("mesoBoard.Data.FK_Posts_Users", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("mesoBoard.Data.FK_Posts_Users", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_ThreadViews_Users", "ThreadView")]
        public EntityCollection<ThreadView> ThreadViews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThreadView>("mesoBoard.Data.FK_ThreadViews_Users", "ThreadView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThreadView>("mesoBoard.Data.FK_ThreadViews_Users", "ThreadView", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Views_Users", "ThreadViewStamp")]
        public EntityCollection<ThreadViewStamp> ThreadViewStamps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThreadViewStamp>("mesoBoard.Data.FK_Views_Users", "ThreadViewStamp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThreadViewStamp>("mesoBoard.Data.FK_Views_Users", "ThreadViewStamp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Users", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("mesoBoard.Data.FK_UserProfiles_Users", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("mesoBoard.Data.FK_UserProfiles_Users", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("mesoBoard.Data.FK_UserProfiles_Users", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("mesoBoard.Data.FK_UserProfiles_Users", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_Subscriptions_Users", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("mesoBoard.Data.FK_Subscriptions_Users", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("mesoBoard.Data.FK_Subscriptions_Users", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mesoBoard.Data", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="alwaysSubscribeToThread">Initial value of the AlwaysSubscribeToThread property.</param>
        /// <param name="alwaysShowSignature">Initial value of the AlwaysShowSignature property.</param>
        /// <param name="avatarType">Initial value of the AvatarType property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 userID, global::System.Boolean alwaysSubscribeToThread, global::System.Boolean alwaysShowSignature, global::System.String avatarType)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserID = userID;
            userProfile.AlwaysSubscribeToThread = alwaysSubscribeToThread;
            userProfile.AlwaysShowSignature = alwaysShowSignature;
            userProfile.AvatarType = avatarType;
            return userProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysSubscribeToThread
        {
            get
            {
                return _AlwaysSubscribeToThread;
            }
            set
            {
                OnAlwaysSubscribeToThreadChanging(value);
                ReportPropertyChanging("AlwaysSubscribeToThread");
                _AlwaysSubscribeToThread = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysSubscribeToThread");
                OnAlwaysSubscribeToThreadChanged();
            }
        }
        private global::System.Boolean _AlwaysSubscribeToThread;
        partial void OnAlwaysSubscribeToThreadChanging(global::System.Boolean value);
        partial void OnAlwaysSubscribeToThreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysShowSignature
        {
            get
            {
                return _AlwaysShowSignature;
            }
            set
            {
                OnAlwaysShowSignatureChanging(value);
                ReportPropertyChanging("AlwaysShowSignature");
                _AlwaysShowSignature = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysShowSignature");
                OnAlwaysShowSignatureChanged();
            }
        }
        private global::System.Boolean _AlwaysShowSignature;
        partial void OnAlwaysShowSignatureChanging(global::System.Boolean value);
        partial void OnAlwaysShowSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ThemeID
        {
            get
            {
                return _ThemeID;
            }
            set
            {
                OnThemeIDChanging(value);
                ReportPropertyChanging("ThemeID");
                _ThemeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThemeID");
                OnThemeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ThemeID;
        partial void OnThemeIDChanging(Nullable<global::System.Int32> value);
        partial void OnThemeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AvatarType
        {
            get
            {
                return _AvatarType;
            }
            set
            {
                OnAvatarTypeChanging(value);
                ReportPropertyChanging("AvatarType");
                _AvatarType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AvatarType");
                OnAvatarTypeChanged();
            }
        }
        private global::System.String _AvatarType;
        partial void OnAvatarTypeChanging(global::System.String value);
        partial void OnAvatarTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Avatar
        {
            get
            {
                return _Avatar;
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.String _Avatar;
        partial void OnAvatarChanging(global::System.String value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultRole
        {
            get
            {
                return _DefaultRole;
            }
            set
            {
                OnDefaultRoleChanging(value);
                ReportPropertyChanging("DefaultRole");
                _DefaultRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultRole");
                OnDefaultRoleChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultRole;
        partial void OnDefaultRoleChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AIM
        {
            get
            {
                return _AIM;
            }
            set
            {
                OnAIMChanging(value);
                ReportPropertyChanging("AIM");
                _AIM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AIM");
                OnAIMChanged();
            }
        }
        private global::System.String _AIM;
        partial void OnAIMChanging(global::System.String value);
        partial void OnAIMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ICQ
        {
            get
            {
                return _ICQ;
            }
            set
            {
                OnICQChanging(value);
                ReportPropertyChanging("ICQ");
                _ICQ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICQ");
                OnICQChanged();
            }
        }
        private Nullable<global::System.Int32> _ICQ;
        partial void OnICQChanging(Nullable<global::System.Int32> value);
        partial void OnICQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MSN
        {
            get
            {
                return _MSN;
            }
            set
            {
                OnMSNChanging(value);
                ReportPropertyChanging("MSN");
                _MSN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MSN");
                OnMSNChanged();
            }
        }
        private global::System.String _MSN;
        partial void OnMSNChanging(global::System.String value);
        partial void OnMSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParsedSignature
        {
            get
            {
                return _ParsedSignature;
            }
            set
            {
                OnParsedSignatureChanging(value);
                ReportPropertyChanging("ParsedSignature");
                _ParsedSignature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParsedSignature");
                OnParsedSignatureChanged();
            }
        }
        private global::System.String _ParsedSignature;
        partial void OnParsedSignatureChanging(global::System.String value);
        partial void OnParsedSignatureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_UserProfiles_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_UserProfiles_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("mesoBoard.Data.FK_UserProfiles_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("mesoBoard.Data.FK_UserProfiles_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Themes", "Theme")]
        public Theme Theme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("mesoBoard.Data.FK_UserProfiles_Themes", "Theme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("mesoBoard.Data.FK_UserProfiles_Themes", "Theme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theme> ThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("mesoBoard.Data.FK_UserProfiles_Themes", "Theme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theme>("mesoBoard.Data.FK_UserProfiles_Themes", "Theme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mesoBoard.Data", "FK_UserProfiles_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_UserProfiles_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_UserProfiles_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("mesoBoard.Data.FK_UserProfiles_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("mesoBoard.Data.FK_UserProfiles_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
