@model ThemeViewModel
<dl>
    <dt>@Html.LabelFor(model => model.Name)</dt>
    <dd>
        @Html.TextBoxFor(model => model.Name) 
        @Html.ValidationMessageFor(model => model.Name) 
    </dd>
            
    <dt>@Html.LabelFor(model => model.DisplayName)</dt>
    <dd>
        @Html.TextBoxFor(model => model.DisplayName) 
        @Html.ValidationMessageFor(model => model.DisplayName) 
        <label class="info">Name displayed to users</label>
    </dd>
                
    <dt>@Html.LabelFor(model => model.FolderName)</dt>
    <dd>
        @Html.TextBoxFor(model => model.FolderName) 
        @Html.ValidationMessageFor(model => model.FolderName) 
        <label class="info">The theme's folder name inside the "Themes" directory</label>
    </dd>
                
    <dt>@Html.LabelFor(model => model.VisibleToUsers)</dt>
    <dd>
        @Html.RadioButtonFor(model => model.VisibleToUsers, true, new { id="VisibleToUsersYes" })
        <label class="inline" for="VisibleToUsersYes">Yes</label>
        <br />
        @Html.RadioButtonFor(model => model.VisibleToUsers, false, new { id="VisibleToUsersNo" })
        <label class="inline" for="VisibleToUsersNo">No</label>

        <label class="info">Whether users can pick this theme from their User CP</label>
    </dd>
                
    <dt>@Html.LabelFor(model => model.DefaultTheme)</dt>
    <dd>
        @Html.CheckBoxFor(model => model.DefaultTheme, new { id = "SetDefaultTheme" })
        <label class="inline" for="SetDefaultTheme">Set as default theme</label>
    </dd>
                
    <dt>&nbsp;</dt>
    <dd>
        @Html.HiddenFor(model => model.ThemeID)
        <input type="submit" value="@Html.SubmitButtonText(Model.ThemeID)" />
    </dd>
                
</dl>
